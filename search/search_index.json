{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ghisa - Github Import Statistic Analyzer About ghisa is a free and open-source software, app and python package that allows that helps you to analyze the import statistics of your github repositories. Key Features Main features of ghisa are: - Import statistics of your github repositories - Import statistics of your github profile Installation Using regular pip and venv tools : python3 -m venv .venv source .venv/bin/activate pip install ghisa Usage Local As executable In a terminal : * ghisa repo [my-github-repo] standard usage ghisa repo -f my_file.txt [my-github-repo] specify a file list output ghisa profile [profile-name] specify a profile name and output As library In a terminal : from ghisa import Repo, Profile repo_url = \"https://github.com/AlexandreGazagnes/ghisa\" repo = Repo(repo_url) print(repo) # or profile_name = \"AlexandreGazagnes\" profile = Profile(profile_name) print(profile) As local web app In a terminal : ghisa gui launch local streamlit On line The on line web app is temporarily unavailable. It will be available in the 0.1.0 release. Documentation Please visit Documentation page. Updates Please visit the - Changelog page - Roadmap page - Release page - Issues page Contributing ghisa is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"Home"},{"location":"#ghisa-github-import-statistic-analyzer","text":"","title":"ghisa - Github Import Statistic Analyzer"},{"location":"#about","text":"ghisa is a free and open-source software, app and python package that allows that helps you to analyze the import statistics of your github repositories.","title":"About"},{"location":"#key-features","text":"Main features of ghisa are: - Import statistics of your github repositories - Import statistics of your github profile","title":"Key Features"},{"location":"#installation","text":"Using regular pip and venv tools : python3 -m venv .venv source .venv/bin/activate pip install ghisa","title":"Installation"},{"location":"#usage","text":"","title":"Usage"},{"location":"#local","text":"","title":"Local"},{"location":"#as-executable","text":"In a terminal : * ghisa repo [my-github-repo] standard usage ghisa repo -f my_file.txt [my-github-repo] specify a file list output ghisa profile [profile-name] specify a profile name and output","title":"As executable"},{"location":"#as-library","text":"In a terminal : from ghisa import Repo, Profile repo_url = \"https://github.com/AlexandreGazagnes/ghisa\" repo = Repo(repo_url) print(repo) # or profile_name = \"AlexandreGazagnes\" profile = Profile(profile_name) print(profile)","title":"As library"},{"location":"#as-local-web-app","text":"In a terminal : ghisa gui launch local streamlit","title":"As local web app"},{"location":"#on-line","text":"The on line web app is temporarily unavailable. It will be available in the 0.1.0 release.","title":"On line"},{"location":"#documentation","text":"Please visit Documentation page.","title":"Documentation"},{"location":"#updates","text":"Please visit the - Changelog page - Roadmap page - Release page - Issues page","title":"Updates"},{"location":"#contributing","text":"ghisa is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"Contributing"},{"location":"changelog/","text":"Changelog 2024-01-16 - 0.0.1 - Pre-release Added Implement 2 classes Repo and Profile TODO Have look to #TODO in the code Implement github api instead of scraping Implement gui Implement tests Refactor code 2024-01-14 - 0.0.0 - First release Added Just create the package and reserve pypi name","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#2024-01-16-001-pre-release","text":"","title":"2024-01-16 - 0.0.1 - Pre-release"},{"location":"changelog/#added","text":"Implement 2 classes Repo and Profile","title":"Added"},{"location":"changelog/#todo","text":"Have look to #TODO in the code Implement github api instead of scraping Implement gui Implement tests Refactor code","title":"TODO"},{"location":"changelog/#2024-01-14-000-first-release","text":"","title":"2024-01-14 - 0.0.0 - First release"},{"location":"changelog/#added_1","text":"Just create the package and reserve pypi name","title":"Added"},{"location":"code_of_conduct/","text":"Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at . All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Code of Conduct"},{"location":"code_of_conduct/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"code_of_conduct/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"code_of_conduct/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"code_of_conduct/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"code_of_conduct/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"code_of_conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at . All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"code_of_conduct/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"code_of_conduct/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"code_of_conduct/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"code_of_conduct/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"code_of_conduct/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the community.","title":"4. Permanent Ban"},{"location":"code_of_conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Attribution"},{"location":"contributing/","text":"Contributing About ghisa is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Local development The complete test suite depends on having at least the following installed (possibly not a complete list) git (Version 2.24.0 or above is required ) python3.10.x (Required by a test which checks different python versions) poetry, pip, pipenv, virtualenv, or similar poetry is the preferred tool for managing dependencies, highly recommended Setting up an environment The project uses Poetry to manage its dependencies. Please install it using the following command : pip install poetry Then, please install the dependencies using the following command : poetry install Activate the environment using the following command : poetry shell And finally, install the pre-commit hooks using the following command : pre-commit install Running a specific test Running a specific test with the environment activated is as easy as: pytest tests -k test_the_name_of_your_test Running all the tests With the environment activated you can run all of the tests using: pytest tests Workflow Reading issues Please read the issues page before creating a new issue. Find a new issue to work on in the page. If you want to work on an issue, please comment on the issue to let others know that you are working on it. Creating a new issue Feel free to create a new issue if you have any question, suggestion, or if you want to report a bug. You will find a template to fill in when creating a new issue. We have carefully crafted the template to help you provide the information we need to help you. We will add relevant labels to your issue to help us keep track of it. Finding the good issue to work on Most important issues are tagged with the good first issue label. Find relevant issues to work on by filtering the issues with the good first issue , urgent , tricky labels. When you find an issue you want to work on, please comment on the issue to let others know that you are working on it. You will have to make a comment to the issue in order to block it to other contributors. Creating a new branch When you are ready to start working on an issue, please create a new branch from the issue page. Please choose dev as the base branch and not main . You will not habe to worry about the name of your branch : it will be automatically generated from the issue title. Once you have created the branch, you can start working on the issue. Creating a pull request When you are ready to submit your work, please create a pull request from the issue page. ** IMPORTANT ** : Please choose dev as the dest branch and not main . You will have to fill in the pull request template. We will review your pull request and give you feedback. Once your pull request is approved, we will merge it into the dev branch. We will then close the issue and add the merged label to it.","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"contributing/#about","text":"ghisa is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.","title":"About"},{"location":"contributing/#local-development","text":"The complete test suite depends on having at least the following installed (possibly not a complete list) git (Version 2.24.0 or above is required ) python3.10.x (Required by a test which checks different python versions) poetry, pip, pipenv, virtualenv, or similar poetry is the preferred tool for managing dependencies, highly recommended","title":"Local development"},{"location":"contributing/#setting-up-an-environment","text":"The project uses Poetry to manage its dependencies. Please install it using the following command : pip install poetry Then, please install the dependencies using the following command : poetry install Activate the environment using the following command : poetry shell And finally, install the pre-commit hooks using the following command : pre-commit install","title":"Setting up an environment"},{"location":"contributing/#running-a-specific-test","text":"Running a specific test with the environment activated is as easy as: pytest tests -k test_the_name_of_your_test","title":"Running a specific test"},{"location":"contributing/#running-all-the-tests","text":"With the environment activated you can run all of the tests using: pytest tests","title":"Running all the tests"},{"location":"contributing/#workflow","text":"","title":"Workflow"},{"location":"contributing/#reading-issues","text":"Please read the issues page before creating a new issue. Find a new issue to work on in the page. If you want to work on an issue, please comment on the issue to let others know that you are working on it.","title":"Reading issues"},{"location":"contributing/#creating-a-new-issue","text":"Feel free to create a new issue if you have any question, suggestion, or if you want to report a bug. You will find a template to fill in when creating a new issue. We have carefully crafted the template to help you provide the information we need to help you. We will add relevant labels to your issue to help us keep track of it.","title":"Creating a new issue"},{"location":"contributing/#finding-the-good-issue-to-work-on","text":"Most important issues are tagged with the good first issue label. Find relevant issues to work on by filtering the issues with the good first issue , urgent , tricky labels. When you find an issue you want to work on, please comment on the issue to let others know that you are working on it. You will have to make a comment to the issue in order to block it to other contributors.","title":"Finding the good issue to work on"},{"location":"contributing/#creating-a-new-branch","text":"When you are ready to start working on an issue, please create a new branch from the issue page. Please choose dev as the base branch and not main . You will not habe to worry about the name of your branch : it will be automatically generated from the issue title. Once you have created the branch, you can start working on the issue.","title":"Creating a new branch"},{"location":"contributing/#creating-a-pull-request","text":"When you are ready to submit your work, please create a pull request from the issue page. ** IMPORTANT ** : Please choose dev as the dest branch and not main . You will have to fill in the pull request template. We will review your pull request and give you feedback. Once your pull request is approved, we will merge it into the dev branch. We will then close the issue and add the merged label to it.","title":"Creating a pull request"},{"location":"installation/","text":"Installation Using regular pip and venv tools Creating a virtual environment : python3 -m venv .venv source .venv/bin/activate It is recommended to use a virtual environment to install the package. Installing the package : pip install ghisa [--upgrade] [--user] Using poetry or pipenv It is recommended to use a virtual environment to install the package. pip install poetry poetry init poetry add ghisa Check the installation You can check the installation by running the following command : pip show ghisa or pip list | grep ghisa","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#using-regular-pip-and-venv-tools","text":"Creating a virtual environment : python3 -m venv .venv source .venv/bin/activate It is recommended to use a virtual environment to install the package. Installing the package : pip install ghisa [--upgrade] [--user]","title":"Using regular pip and venv tools"},{"location":"installation/#using-poetry-or-pipenv","text":"It is recommended to use a virtual environment to install the package. pip install poetry poetry init poetry add ghisa","title":"Using poetry or pipenv"},{"location":"installation/#check-the-installation","text":"You can check the installation by running the following command : pip show ghisa or pip list | grep ghisa","title":"Check the installation"},{"location":"security/","text":"Security Policy Supported Versions Version Supported 0.0.0 :white_check_mark: Reporting a Vulnerability This is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"Security"},{"location":"security/#security-policy","text":"","title":"Security Policy"},{"location":"security/#supported-versions","text":"Version Supported 0.0.0 :white_check_mark:","title":"Supported Versions"},{"location":"security/#reporting-a-vulnerability","text":"This is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"Reporting a Vulnerability"},{"location":"usage/","text":"Usage Local As executable : In a terminal : * the-package [youtube-url] standard usage : download and convert to mp3 the-package -d my/dest [youtube-url] specify a destination folder the-package -f my_file.txt -d my/dest specify a file list song / audibooks urls and specify destination folder The my_file.txt file must contain one youtube url per line. my_file.txt example : https://www.youtube.com/watch?v=3y5A4paFOb4 https://www.youtube.com/watch?v=3y5A4paFOb4 https://www.youtube.com/watch?v=3y5A4paFOb4 the-package -f my_file.txt -d my/dest -p specify a file list song / audibooks ids and specify destination folder The my_file.txt file must contain one youtube id per line. my_file.txt example : 3y5A4paFOb4 3y5A4paFOb4 3y5A4paFOb4 the-package -f my_file.txt -s -d my/dest specify a file list song / audioobks names (not just yourube url) and specify destination folder. WARNING : - Please note that for the -s option, you must have a set up your youtube rapid api account. You need to add in your environment variables or export directly from a terminal the following : export RAPID_API_KEY=\"*********\" export RAPID_API_HOST=\"youtube-data8.p.rapidapi.com\" As library In a python file : from the-package import ThePackage url = \"https://www.youtube.com/watch?v=3y5A4paFOb4\" the-package = ThePackage(url) the-package.run() # or urls = [ \"https://www.youtube.com/watch?v=3y5A4paFOb4\", \"https://www.youtube.com/watch?v=3y5A4paFOb4\", \"https://www.youtube.com/watch?v=3y5A4paFOb4\" ] the-package = ThePackage(urls) the-package.run() As web app In a terminal : the-package gui launch local streamlit On line The on line web app is temporarily unavailable. It will be available in the 0.2.5 release. New features ThePackage is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#local","text":"","title":"Local"},{"location":"usage/#as-executable","text":"In a terminal : * the-package [youtube-url] standard usage : download and convert to mp3 the-package -d my/dest [youtube-url] specify a destination folder the-package -f my_file.txt -d my/dest specify a file list song / audibooks urls and specify destination folder The my_file.txt file must contain one youtube url per line. my_file.txt example : https://www.youtube.com/watch?v=3y5A4paFOb4 https://www.youtube.com/watch?v=3y5A4paFOb4 https://www.youtube.com/watch?v=3y5A4paFOb4 the-package -f my_file.txt -d my/dest -p specify a file list song / audibooks ids and specify destination folder The my_file.txt file must contain one youtube id per line. my_file.txt example : 3y5A4paFOb4 3y5A4paFOb4 3y5A4paFOb4 the-package -f my_file.txt -s -d my/dest specify a file list song / audioobks names (not just yourube url) and specify destination folder. WARNING : - Please note that for the -s option, you must have a set up your youtube rapid api account. You need to add in your environment variables or export directly from a terminal the following : export RAPID_API_KEY=\"*********\" export RAPID_API_HOST=\"youtube-data8.p.rapidapi.com\"","title":"As executable :"},{"location":"usage/#as-library","text":"In a python file : from the-package import ThePackage url = \"https://www.youtube.com/watch?v=3y5A4paFOb4\" the-package = ThePackage(url) the-package.run() # or urls = [ \"https://www.youtube.com/watch?v=3y5A4paFOb4\", \"https://www.youtube.com/watch?v=3y5A4paFOb4\", \"https://www.youtube.com/watch?v=3y5A4paFOb4\" ] the-package = ThePackage(urls) the-package.run()","title":"As library"},{"location":"usage/#as-web-app","text":"In a terminal : the-package gui launch local streamlit","title":"As web app"},{"location":"usage/#on-line","text":"The on line web app is temporarily unavailable. It will be available in the 0.2.5 release.","title":"On line"},{"location":"usage/#new-features","text":"ThePackage is an open-source project and we are always looking for more people to contribute to its development. It could be by adding new features, fixing bugs, improving the documentation, or any other way you see fit. Any help is welcome, and we will do our best to help you get started. Any feedback is also welcome. Please visit Contributing page.","title":"New features"}]}